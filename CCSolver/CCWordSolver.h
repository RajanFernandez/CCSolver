//
//  CCWordSolver.h
//  Code Cracker Solver
//
//  Created by Rajan Fernandez on 30/01/16.
//  Copyright Â© 2016 Rajan Fernandez. All rights reserved.
//

#import <Foundation/Foundation.h>
#import "CCWord.h"

@interface CCWordSolver : NSObject

/*!
 * @brief Generates a dictionary of criteria that describe an unknown word. These criteria are used during the solver to find all the possible matches for the incomplete word. Dictionary format: { String of the known character or code index : Array of indexes where the character occurs in the word }
 *
 * @param word The word to generate the criteria for.
 */
+(NSDictionary *)criteriaForWord:(CCWord *)word;

/*!
 * @brief Returns an array of possible words for a given word with unknown letters.
 *
 * @param word The word to generate the criteria for.
 */
+(NSMutableArray *)shortlistForIncompleteWord:(CCWord *)word;

/*!
 * @brief Checks if a word is a certain length.
 *
 * @param word The word to check.
 * @param length The anticipated length of the word.
 */
+(BOOL)word:(NSString *)word isOfLength:(NSUInteger)length;

/*!
 * @brief Checks if a word is matches a given set or criteria (generated by CCWordSolver:criteriaForWord:).
 *
 * @param word The word to check.
 * @param critera The criteria to check the word against.
 */
+(BOOL)word:(NSString *)word matchesCriteria:(NSDictionary *)criteria;

/*!
 * @brief Returns true if the input word has the given character at the given indexes and not at other indexes
 *
 * @param word The word to test.
 * @param character The character to check for.
 * @param places An array of integers specifying the character indexes to expect the known character.
 */
+(BOOL)word:(NSString *)word hasKnownCharacter:(char)character inPlaces:(NSArray *)places;

/*!
 * @brief Returns true if the input word has a common charater at all the given indexes, and that that character does not occur at any other indexes in the word.
 */
+(BOOL)word:(NSString *)word hasCommonCharacterInPlaces:(NSSet *)places;

@end
